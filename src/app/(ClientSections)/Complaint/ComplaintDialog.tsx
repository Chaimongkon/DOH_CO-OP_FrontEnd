"use client";

import React from "react";
import { Button, Input, Modal, Alert, Form, message } from "antd";
import { SendOutlined as SendIcon } from "@ant-design/icons";
const { TextArea } = Input;
import { getApiConfig } from "@/lib/config";
import logger from "@/lib/logger";
import {
  ComplaintFormData,
  ComplaintApiResponse,
  ComplaintDialogProps,
  COMPLAINT_VALIDATION,
  COMPLAINT_ERROR_MESSAGES,
  COMPLAINT_ENDPOINTS,
  COMPLAINT_FORM_FIELDS,
} from "@/types/complaint";
import styles from "./ComplaintDialog.module.css";

export default function ComplaintDialog({
  open,
  handleClose,
}: ComplaintDialogProps) {
  const [form] = Form.useForm();
  const [isSubmitting, setIsSubmitting] = React.useState(false);
  const [apiError, setApiError] = React.useState<string | null>(null);
  
  const { apiUrl } = getApiConfig();

  const handleSubmit = async (values: ComplaintFormData) => {
    setIsSubmitting(true);
    setApiError(null);

    try {
      const response = await fetch(`${apiUrl}${COMPLAINT_ENDPOINTS.SUBMIT}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(values),
      });

      if (response.ok) {
        const result: ComplaintApiResponse = await response.json();
        logger.info("Complaint submitted successfully:", { data: result });
        message.success(COMPLAINT_ERROR_MESSAGES.SUCCESS_MESSAGE);
        form.resetFields();
        handleClose();
      } else {
        const errorData: ComplaintApiResponse = await response.json();
        const errorMessage = errorData.message || COMPLAINT_ERROR_MESSAGES.submitError || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
        logger.error("Failed to submit complaint:", errorData);
        setApiError(errorMessage);
        message.error(errorMessage);
      }
    } catch (error) {
      logger.error("Error submitting complaint:", error);
      const errorMessage = COMPLAINT_ERROR_MESSAGES.networkError;
      setApiError(errorMessage);
      message.error(errorMessage);
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleModalClose = () => {
    if (!isSubmitting) {
      form.resetFields();
      setApiError(null);
      handleClose();
    }
  };

  return (
    <Modal
      title={
        <div className={styles.dialogTitle}>
          ‚ú® ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞ ‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‚ú®
        </div>
      }
      open={open}
      onCancel={handleModalClose}
      footer={null}
      width="90%"
      style={{ maxWidth: '650px', maxHeight: '90vh' }}
      maskClosable={!isSubmitting}
      centered
      styles={{
        header: {
          textAlign: 'center',
          borderBottom: 'none',
          paddingBottom: '12px',
          padding: '16px 20px 12px 20px',
          background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,250,252,0.9) 100%)',
          backdropFilter: 'blur(20px)',
          borderRadius: '20px 20px 0 0'
        },
        body: {
          maxHeight: '75vh',
          overflowY: 'auto',
          paddingTop: '0px',
          paddingLeft: '24px',
          paddingRight: '24px',
          paddingBottom: '20px',
          background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,250,252,0.95) 100%)',
          backdropFilter: 'blur(20px)'
        },
        mask: {
          backdropFilter: 'blur(8px)',
          backgroundColor: 'rgba(0, 0, 0, 0.45)'
        }
      }}
    >
      <div className={styles.dialogContentText}>
        <p>
          üè¢ <strong>‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≠‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏Å‡∏£‡∏°‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏à‡∏≥‡∏Å‡∏±‡∏î</strong>
          ‡πÑ‡∏î‡πâ‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ
          ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
        </p>
        <p>
          üì¢ ‡∏´‡∏≤‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏î‡∏£‡πâ‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå
          ‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå‡∏Ø ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå
          ‡∏¢‡∏±‡∏á‡∏°‡∏¥‡πÑ‡∏î‡πâ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ï‡∏≤‡∏° ‡∏Ç‡πâ‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö ‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
          ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡πÉ‡∏î‡πÜ ‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏∑‡∏≠‡∏î‡∏£‡πâ‡∏≠‡∏ô
          ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏£‡∏£‡∏°‡πÅ‡∏Å‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏£‡∏∞‡πÅ‡∏Å‡πà‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
          ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏ô‡∏™‡∏°‡∏Ñ‡∏ß‡∏£‡πÅ‡∏Å‡πà‡πÄ‡∏´‡∏ï‡∏∏ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà
          <strong>‡∏™‡∏´‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≠‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏Å‡∏£‡∏°‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏ß‡∏á</strong> ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ üëá
        </p>
      </div>
      
      <div className={styles.compactInfoBox}>
        <span className={styles.infoIcon}>üí°</span>
        <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      </div>
      
      <Form form={form} layout="vertical" onFinish={handleSubmit}>
        {apiError && (
          <Alert 
            type="error" 
            message={apiError} 
            style={{ marginBottom: 16 }}
            showIcon
          />
        )}
        
        <Form.Item 
          name={COMPLAINT_FORM_FIELDS.MEMBER_ID}
          label="‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"
          className={`${styles.textField} ${styles.optionalField}`}
        >
          <Input 
            placeholder="üí≥ ‡πÉ‡∏™‡πà‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (‡∏´‡∏≤‡∏Å‡∏°‡∏µ) ‡πÄ‡∏ä‡πà‡∏ô 12345"
            disabled={isSubmitting}
            style={{ 
              fontFamily: "THSarabun, sans-serif", 
              fontSize: "14px",
              padding: "8px 12px",
              height: "32px"
            }}
          />
        </Form.Item>
        
        <Form.Item 
          name={COMPLAINT_FORM_FIELDS.NAME}
          label="‡∏ä‡∏∑‡πà‡∏≠ - ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
          className={`${styles.textField} ${styles.optionalField}`}
        >
          <Input 
            placeholder="üë§ ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö) ‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏≤‡∏¢ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ"
            disabled={isSubmitting}
            style={{ 
              fontFamily: "THSarabun, sans-serif", 
              fontSize: "14px",
              padding: "8px 12px",
              height: "32px"
            }}
          />
        </Form.Item>
        
        <Form.Item 
          name={COMPLAINT_FORM_FIELDS.TEL}
          label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
          className={`${styles.textField} ${styles.optionalField}`}
          rules={[
            {
              pattern: COMPLAINT_VALIDATION.tel,
              message: COMPLAINT_ERROR_MESSAGES.INVALID_TEL
            }
          ]}
        >
          <Input 
            placeholder="üì± ‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÇ‡∏ó‡∏£‡∏Å‡∏•‡∏±‡∏ö) ‡πÄ‡∏ä‡πà‡∏ô 081-234-5678"
            disabled={isSubmitting}
            style={{ 
              fontFamily: "THSarabun, sans-serif", 
              fontSize: "14px",
              padding: "8px 12px",
              height: "32px"
            }}
          />
        </Form.Item>
        
        <Form.Item 
          name={COMPLAINT_FORM_FIELDS.EMAIL}
          label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
          className={`${styles.textField} ${styles.optionalField}`}
          rules={[
            {
              type: 'email',
              message: COMPLAINT_ERROR_MESSAGES.INVALID_EMAIL
            }
          ]}
        >
          <Input 
            type="email"
            placeholder="‚úâÔ∏è ‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏• (‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö) ‡πÄ‡∏ä‡πà‡∏ô example@gmail.com"
            disabled={isSubmitting}
            style={{ 
              fontFamily: "THSarabun, sans-serif", 
              fontSize: "14px",
              padding: "8px 12px",
              height: "32px"
            }}
          />
        </Form.Item>
        
        <div className={styles.compactDivider}>
          üìù ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
        </div>
        
        <Form.Item 
          name={COMPLAINT_FORM_FIELDS.COMPLAINT}
          label="‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞ ‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"
          className={`${styles.textField} ${styles.requiredField}`}
          rules={[
            { 
              required: true, 
              message: COMPLAINT_ERROR_MESSAGES.REQUIRED_COMPLAINT 
            },
            {
              min: COMPLAINT_VALIDATION.minComplaintLength,
              message: COMPLAINT_ERROR_MESSAGES.COMPLAINT_TOO_SHORT
            },
            {
              max: COMPLAINT_VALIDATION.maxComplaintLength,
              message: COMPLAINT_ERROR_MESSAGES.COMPLAINT_TOO_LONG
            }
          ]}
        >
          <TextArea 
            rows={4}
            placeholder="üìù ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞/‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô\n\nüí° ‡πÄ‡∏ä‡πà‡∏ô: ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡πâ‡∏≤, ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏†‡∏≤‡∏û, ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 15/1/67, 10:30 ‡∏ô."
            disabled={isSubmitting}
            style={{ 
              fontFamily: "THSarabun, sans-serif", 
              fontSize: "16px",
              padding: "10px 12px",
              borderRadius: "8px",
              minHeight: "100px",
              lineHeight: "1.4"
            }}
          />
        </Form.Item>
        
        <Form.Item className={styles.dialogActions}>
          <Button
            type="primary"
            htmlType="submit"
            loading={isSubmitting}
            className={styles.submitButton}
            style={{ marginRight: 10 }}
            icon={!isSubmitting && <SendIcon />}
          >
            {isSubmitting ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á..." : "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
          </Button>
          <Button
            onClick={handleModalClose}
            disabled={isSubmitting}
            className={styles.cancelButton}
          >
            ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </Button>
        </Form.Item>
      </Form>
    </Modal>
  );
}