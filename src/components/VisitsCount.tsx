"use client";

import { useEffect, useRef } from 'react';
import logger from '@/lib/logger';

export default function VisitsCount() {
  const API = process.env.NEXT_PUBLIC_API_BASE_URL;
  const visitRecorded = useRef(false);

  useEffect(() => {
    // Set the page title
    document.title = 'สหกรณ์ออมทรัพย์กรมทางหลวง จำกัด';

    // Set the meta description
    const metaDescription = document.querySelector('meta[name="description"]');
    if (metaDescription) {
      metaDescription.setAttribute('content', 'Generated by Chaimongkon');
    } else {
      const metaTag = document.createElement('meta');
      metaTag.name = 'description';
      metaTag.content = 'Generated by Chaimongkon';
      document.head.appendChild(metaTag);
    }

    // Set the favicon
    const linkIcon = document.querySelector('link[rel="icon"]');
    if (linkIcon) {
      linkIcon.setAttribute('href', '/icon.ico');
    } else {
      const linkTag = document.createElement('link');
      linkTag.rel = 'icon';
      linkTag.href = '/icon.ico';
      document.head.appendChild(linkTag);
    }

    // Record visit logic
    if (visitRecorded.current) return;

    const recordVisit = async () => {
      try {
        const response = await fetch(`${API}/Visits`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (!response.ok) {
          throw new Error("Failed to record visit");
        }

        const data = await response.json();

        if (data.success) {
          document.cookie = "visitRecorded=true; max-age=86400; path=/"; // Cookie expires in 24 hours
          visitRecorded.current = true;
        } else {
          logger.error("Error in response data", { data });
          visitRecorded.current = false;
        }
      } catch (error) {
        logger.error("Error recording visit", error);
        visitRecorded.current = false; // Retry logic can be implemented here
      }
    };

    if (!document.cookie.includes("visitRecorded=true")) {
      visitRecorded.current = true;
      recordVisit();
    }
  }, [API]);

  return null;
}
